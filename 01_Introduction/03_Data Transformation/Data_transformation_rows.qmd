---
title: "Quarto Template"
author: "Rodolfo León"
format: html
editor: visual
editor_options: 
  chunk_output_type: inline
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
```

```{r, echo=FALSE, warning=FALSE, message=FALSE}
library(tidyverse)
library(palmerpenguins)
library(ggthemes)
```

```{r}
#| echo: false
# The echo: false option disables the printing of code (only output is displayed).
```

```{r}
library(nycflights13)
```

```{r}
View(flights)
```

```{r}
# Flights with a given destination
flights |>
  filter(dest == "IAH") |> 
  group_by(year, month, day) |> 
  summarize(
    arr_delay = mean(arr_delay, na.rm = TRUE)
  )
```

### Rows - filter()

```{r}
# Filtering rows does not affect columns
flights %>% filter(dep_delay > 120)
```

```{r}
# Flights that departed on January 1
flights |> 
  filter(month == 1 & day == 1)

```

```{r}
# Flights that departed in January or February
flights |> 
  filter(month == 1 | month == 2)

```

```{r}
# A shorter way to select flights that departed in January or February
flights |> 
  filter(month %in% c(1, 2))
```

### Rows - arrange()

```{r}
# Sort the order of the rows for the whole dataframe. Use arrange(desc()) for descending order
flights |> 
  arrange(year, month, day, dep_time)
```

### Rows - distinct()

```{r}
# Remove duplicate rows, if any
flights |> 
  distinct()
```

```{r}
# Find all unique origin and destination pairs
flights |> 
  distinct(origin, dest)
```

```{r}
# To the keep other columns when filtering for unique rows, use
flights |> 
  distinct(origin, dest, .keep_all = TRUE)
```

```{r}
# To find the number of occurrences instead, you’re better off swapping distinct() for count(). Add sort = TRUE to arrange in descending order.
flights |>
  count(origin, dest, sort = TRUE)
```
