---
title: "Data Imporrt"
author: "Rodolfo León"
format: html
editor: visual
editor_options: 
  chunk_output_type: inline
---

```{r setup, include=FALSE, warning=FALSE, message=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
```

```{r}
#| echo: false
library(tidyverse)
library(ggthemes)

```

```{r}
students <- read_csv("data/students.csv")

```

```{r}
students
```

```{r}
# Force recognition of N/A as NA
students <- read_csv("data/students.csv", na = c("N/A", ""))

students
```

```{r}
students |> 
  rename(
    student_id = `Student ID`, 
    full_name = `Full Name`
  )

students       # Does not work. Better use "janitor".
```

```{r}
students |> janitor::clean_names()  #converts names to snake case all at once
```

```{r}
students <- students |>
  janitor::clean_names() |>
  mutate(
    meal_plan = factor(meal_plan),
    age = parse_number(if_else(age == "five", "5", age))
  )

students
# Should replace "five" with "5" and convert age to dbl but it fails
```

### Exercises

1.  Identify what is wrong with each of the following inline CSV files. What happens when you run the code?

    ```{r}
    readr::read_csv("a,b\n1,2,3\n4,5,6")

    ```

```{r}
readr::read_csv("a,b,c\n1,2\n1,2,3,4")

```

```{r}
readr::read_csv("a,b\n\"1")

```

```{r}
readr::read_csv("a,b\n1,2\na,b")

```

```{r}
readr::read_csv("a;b\n1;3")
```

```{r}
readr::read_delim("a;b\n1;3")
```

Practice referring to non-syntactic names in the following data frame by:

```{r}
annoying <- tibble(
  `1` = 1:10,
  `2` = `1` * 2 + rnorm(length(`1`))
)
```

a.  Extracting the variable called `1`.

    ```{r}
    annoying |> select(`1`)
    ```

b.  Plotting a scatterplot of `1` vs. `2`.

    ```{r}
    ggplot(annoying, aes(x = `2`, y = `1`)) +
      geom_point()
    ```

c.  Creating a new column called `3`, which is `2` divided by `1`.

    ```{r}
    annoying |>
      mutate(`3` = `2` / `1`)
    ```

d.  Renaming the columns to `one`, `two`, and `three`.

```{r}
annoying |>
  mutate(`3` = `2` / `1`) |>
  rename(
    "one" = `1`,
    "two" = `2`,
    "three" = `3`
  )
```
